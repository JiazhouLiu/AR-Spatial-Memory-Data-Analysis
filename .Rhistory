}
else if(pNum %% 4 == 0){
if(i >= 11 && i <= 20){
RegularRotation <- append(RegularRotation,sum(ar))
RegularDistance <- append(RegularDistance,sum(ad))
}else{
IrregularRotation <- append(IrregularRotation,sum(ar))
IrregularDistance <- append(IrregularDistance,sum(ad))
}
}
}
assign(paste("MeanRegularRotation",pNum), mean(RegularRotation))
assign(paste("MeanIrregularRotation",pNum), mean(IrregularRotation))
assign(paste("MeanRegularDistance",pNum), mean(RegularDistance))
assign(paste("MeanIrregularDistance",pNum), mean(IrregularDistance))
}
}
data.locomotion.layout <- data.frame(
PID = 1:16,
Layout = rep(c("Regular", "Irregular"), each = 16),
Rotation = c(get('MeanRegularRotation 1'),  get('MeanRegularRotation 2'), get('MeanRegularRotation 3'), get('MeanRegularRotation 4'),
get('MeanRegularRotation 5'), get('MeanRegularRotation 6'), get('MeanRegularRotation 7'), get('MeanRegularRotation 8'),
get('MeanRegularRotation 9'), get('MeanRegularRotation 10'), get('MeanRegularRotation 11'), get('MeanRegularRotation 12'),
get('MeanRegularRotation 13'), get('MeanRegularRotation 14'), get('MeanRegularRotation 15'), get('MeanRegularRotation 16'),
get('MeanIrregularRotation 1'),  get('MeanIrregularRotation 2'), get('MeanIrregularRotation 3'), get('MeanIrregularRotation 4'),
get('MeanIrregularRotation 5'), get('MeanIrregularRotation 6'), get('MeanIrregularRotation 7'), get('MeanIrregularRotation 8'),
get('MeanIrregularRotation 9'), get('MeanIrregularRotation 10'), get('MeanIrregularRotation 11'), get('MeanIrregularRotation 12'),
get('MeanIrregularRotation 13'), get('MeanIrregularRotation 14'), get('MeanIrregularRotation 15'), get('MeanIrregularRotation 16')),
Distance = c(get('MeanRegularDistance 1'),  get('MeanRegularDistance 2'), get('MeanRegularDistance 3'), get('MeanRegularDistance 4'),
get('MeanRegularDistance 5'), get('MeanRegularDistance 6'), get('MeanRegularDistance 7'), get('MeanRegularDistance 8'),
get('MeanRegularDistance 9'), get('MeanRegularDistance 10'), get('MeanRegularDistance 11'), get('MeanRegularDistance 12'),
get('MeanRegularDistance 13'), get('MeanRegularDistance 14'), get('MeanRegularDistance 15'), get('MeanRegularDistance 16'),
get('MeanIrregularDistance 1'),  get('MeanIrregularDistance 2'), get('MeanIrregularDistance 3'), get('MeanIrregularDistance 4'),
get('MeanIrregularDistance 5'), get('MeanIrregularDistance 6'), get('MeanIrregularDistance 7'), get('MeanIrregularDistance 8'),
get('MeanIrregularDistance 9'), get('MeanIrregularDistance 10'), get('MeanIrregularDistance 11'), get('MeanIrregularDistance 12'),
get('MeanIrregularDistance 13'), get('MeanIrregularDistance 14'), get('MeanIrregularDistance 15'), get('MeanIrregularDistance 16'))
)
data.locomotion.layout$PID=as.factor(data.locomotion.layout$PID)
data.locomotion.layout$Layout=as.factor(data.locomotion.layout$Layout)
setwd("~/R Projects/ARSpatialMemory-R")
save(data.locomotion.layout, file = "data.locomotion.layout.Rdata")
##################################################
######### Locomotion by Condition (Learning) #######################
setwd("~/R Projects/ARSpatialMemory-R/Data/positionData")
WDFiles = list.files(pattern="*Raw.csv")
for(pNum in 1:length(WDFiles)){
mydata <- read.csv(WDFiles[pNum])
mydata <- subset(mydata, TrialID != "Training")
mydataLearning <- subset(mydata, TrialState == "learning")
mydataLearning <- dplyr::select(mydataLearning, TrialID, CameraEulerAngles.y, CameraPosition.x, CameraPosition.y, CameraPosition.z)
for(row in 1:nrow(mydataLearning)){
if(mydataLearning[row,2]>180){
mydataLearning[row,2] <- mydataLearning[row,2]-360
}
}
Furniture_RegularRotation = vector()
NoFurniture_RegularRotation = vector()
Furniture_IrregularRotation = vector()
NoFurniture_IrregularRotation = vector()
Furniture_RegularDistance = vector()
NoFurniture_RegularDistance  = vector()
Furniture_IrregularDistance  = vector()
NoFurniture_IrregularDistance = vector()
for(i in 1:20){
if((pNum == 2 && i == 12) ||
(pNum == 2 && i == 16) ||
(pNum == 5 && i == 19) ||
(pNum == 6 && i == 14) ||
(pNum == 6 && i == 15) ||
(pNum == 7 && i == 12) ||
(pNum == 9 && i == 6) ||
(pNum == 9 && i == 9) ||
(pNum == 9 && i == 10) ||
(pNum == 11 && i == 1) ||
(pNum == 12 && i == 12) ||
(pNum == 12 && i == 17) ||
(pNum == 13 && i == 1) ||
(pNum == 14 && i == 1) ||
(pNum == 14 && i == 17) ||
(pNum == 15 && i == 5) ||
(pNum == 15 && i == 6) ||
(pNum == 15 && i == 7) ||
(pNum == 15 && i == 9)){
}else{
df <- subset(mydataLearning, TrialID==i)
ar = vector()
ad = vector()
for(row in 1:nrow(df)-1){
r <- abs(df[row+1,2] - df[row,2])
ar <- append(ar,r)
d <- sqrt((df[row+1,3] - df[row,3])*(df[row+1,3] - df[row,3]) + (df[row+1,5] - df[row,5])*(df[row+1,5] - df[row,5]))
ad <- append(ad,d)
}
if(pNum %% 4 == 1){
if(i >= 1 && i <= 5){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 6 && i <= 10){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 11 && i <= 15){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}else if(pNum %% 4 == 2){
if(i >= 11 && i <= 15){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 1 && i <= 5){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 16 && i <= 20){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}
else if(pNum %% 4 == 3){
if(i >= 6 && i <= 10){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 16 && i <= 20){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 1 && i <= 5){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}
else if(pNum %% 4 == 0){
if(i >= 16 && i <= 20){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 11 && i <= 15){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 6 && i <= 10){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}
}
assign(paste("MeanFurniture_RegularRotation",pNum), mean(Furniture_RegularRotation))
assign(paste("MeanNoFurniture_RegularRotation",pNum), mean(NoFurniture_RegularRotation))
assign(paste("MeanFurniture_IrregularRotation",pNum), mean(Furniture_IrregularRotation))
assign(paste("MeanNoFurniture_IrregularRotation",pNum), mean(NoFurniture_IrregularRotation))
assign(paste("MeanFurniture_RegularDistance",pNum), mean(Furniture_RegularDistance))
assign(paste("MeanNoFurniture_RegularDistance",pNum), mean(NoFurniture_RegularDistance))
assign(paste("MeanFurniture_IrregularDistance",pNum), mean(Furniture_IrregularDistance))
assign(paste("MeanNoFurniture_IrregularDistance",pNum), mean(NoFurniture_IrregularDistance))
}
}
data.locomotion.condition.learning <- data.frame(
PID = 1:16,
Condition = rep(c("Furniture-Regular", "NoFurniture-Regular", "Furniture-Irregular", "NoFurniture-Irregular"), each = 16),
Rotation = c(get('MeanFurniture_RegularRotation 1'),  get('MeanFurniture_RegularRotation 2'), get('MeanFurniture_RegularRotation 3'), get('MeanFurniture_RegularRotation 4'),
get('MeanFurniture_RegularRotation 5'), get('MeanFurniture_RegularRotation 6'), get('MeanFurniture_RegularRotation 7'), get('MeanFurniture_RegularRotation 8'),
get('MeanFurniture_RegularRotation 9'), get('MeanFurniture_RegularRotation 10'), get('MeanFurniture_RegularRotation 11'), get('MeanFurniture_RegularRotation 12'),
get('MeanFurniture_RegularRotation 13'), get('MeanFurniture_RegularRotation 14'), get('MeanFurniture_RegularRotation 15'), get('MeanFurniture_RegularRotation 16'),
get('MeanNoFurniture_RegularRotation 1'),  get('MeanNoFurniture_RegularRotation 2'), get('MeanNoFurniture_RegularRotation 3'), get('MeanNoFurniture_RegularRotation 4'),
get('MeanNoFurniture_RegularRotation 5'), get('MeanNoFurniture_RegularRotation 6'), get('MeanNoFurniture_RegularRotation 7'), get('MeanNoFurniture_RegularRotation 8'),
get('MeanNoFurniture_RegularRotation 9'), get('MeanNoFurniture_RegularRotation 10'), get('MeanNoFurniture_RegularRotation 11'), get('MeanNoFurniture_RegularRotation 12'),
get('MeanNoFurniture_RegularRotation 13'), get('MeanNoFurniture_RegularRotation 14'), get('MeanNoFurniture_RegularRotation 15'), get('MeanNoFurniture_RegularRotation 16'),
get('MeanFurniture_IrregularRotation 1'),  get('MeanFurniture_IrregularRotation 2'), get('MeanFurniture_IrregularRotation 3'), get('MeanFurniture_IrregularRotation 4'),
get('MeanFurniture_IrregularRotation 5'), get('MeanFurniture_IrregularRotation 6'), get('MeanFurniture_IrregularRotation 7'), get('MeanFurniture_IrregularRotation 8'),
get('MeanFurniture_IrregularRotation 9'), get('MeanFurniture_IrregularRotation 10'), get('MeanFurniture_IrregularRotation 11'), get('MeanFurniture_IrregularRotation 12'),
get('MeanFurniture_IrregularRotation 13'), get('MeanFurniture_IrregularRotation 14'), get('MeanFurniture_IrregularRotation 15'), get('MeanFurniture_IrregularRotation 16'),
get('MeanNoFurniture_IrregularRotation 1'),  get('MeanNoFurniture_IrregularRotation 2'), get('MeanNoFurniture_IrregularRotation 3'), get('MeanNoFurniture_IrregularRotation 4'),
get('MeanNoFurniture_IrregularRotation 5'), get('MeanNoFurniture_IrregularRotation 6'), get('MeanNoFurniture_IrregularRotation 7'), get('MeanNoFurniture_IrregularRotation 8'),
get('MeanNoFurniture_IrregularRotation 9'), get('MeanNoFurniture_IrregularRotation 10'), get('MeanNoFurniture_IrregularRotation 11'), get('MeanNoFurniture_IrregularRotation 12'),
get('MeanNoFurniture_IrregularRotation 13'), get('MeanNoFurniture_IrregularRotation 14'), get('MeanNoFurniture_IrregularRotation 15'), get('MeanNoFurniture_IrregularRotation 16')),
Distance = c(get('MeanFurniture_RegularDistance 1'),  get('MeanFurniture_RegularDistance 2'), get('MeanFurniture_RegularDistance 3'), get('MeanFurniture_RegularDistance 4'),
get('MeanFurniture_RegularDistance 5'), get('MeanFurniture_RegularDistance 6'), get('MeanFurniture_RegularDistance 7'), get('MeanFurniture_RegularDistance 8'),
get('MeanFurniture_RegularDistance 9'), get('MeanFurniture_RegularDistance 10'), get('MeanFurniture_RegularDistance 11'), get('MeanFurniture_RegularDistance 12'),
get('MeanFurniture_RegularDistance 13'), get('MeanFurniture_RegularDistance 14'), get('MeanFurniture_RegularDistance 15'), get('MeanFurniture_RegularDistance 16'),
get('MeanNoFurniture_RegularDistance 1'),  get('MeanNoFurniture_RegularDistance 2'), get('MeanNoFurniture_RegularDistance 3'), get('MeanNoFurniture_RegularDistance 4'),
get('MeanNoFurniture_RegularDistance 5'), get('MeanNoFurniture_RegularDistance 6'), get('MeanNoFurniture_RegularDistance 7'), get('MeanNoFurniture_RegularDistance 8'),
get('MeanNoFurniture_RegularDistance 9'), get('MeanNoFurniture_RegularDistance 10'), get('MeanNoFurniture_RegularDistance 11'), get('MeanNoFurniture_RegularDistance 12'),
get('MeanNoFurniture_RegularDistance 13'), get('MeanNoFurniture_RegularDistance 14'), get('MeanNoFurniture_RegularDistance 15'), get('MeanNoFurniture_RegularDistance 16'),
get('MeanFurniture_IrregularDistance 1'),  get('MeanFurniture_IrregularDistance 2'), get('MeanFurniture_IrregularDistance 3'), get('MeanFurniture_IrregularDistance 4'),
get('MeanFurniture_IrregularDistance 5'), get('MeanFurniture_IrregularDistance 6'), get('MeanFurniture_IrregularDistance 7'), get('MeanFurniture_IrregularDistance 8'),
get('MeanFurniture_IrregularDistance 9'), get('MeanFurniture_IrregularDistance 10'), get('MeanFurniture_IrregularDistance 11'), get('MeanFurniture_IrregularDistance 12'),
get('MeanFurniture_IrregularDistance 13'), get('MeanFurniture_IrregularDistance 14'), get('MeanFurniture_IrregularDistance 15'), get('MeanFurniture_IrregularDistance 16'),
get('MeanNoFurniture_IrregularDistance 1'),  get('MeanNoFurniture_IrregularDistance 2'), get('MeanNoFurniture_IrregularDistance 3'), get('MeanNoFurniture_IrregularDistance 4'),
get('MeanNoFurniture_IrregularDistance 5'), get('MeanNoFurniture_IrregularDistance 6'), get('MeanNoFurniture_IrregularDistance 7'), get('MeanNoFurniture_IrregularDistance 8'),
get('MeanNoFurniture_IrregularDistance 9'), get('MeanNoFurniture_IrregularDistance 10'), get('MeanNoFurniture_IrregularDistance 11'), get('MeanNoFurniture_IrregularDistance 12'),
get('MeanNoFurniture_IrregularDistance 13'), get('MeanNoFurniture_IrregularDistance 14'), get('MeanNoFurniture_IrregularDistance 15'), get('MeanNoFurniture_IrregularDistance 16'))
)
data.locomotion.condition.learning$PID=as.factor(data.locomotion.condition.learning$PID)
data.locomotion.condition.learning$Condition=as.factor(data.locomotion.condition.learning$Condition)
setwd("~/R Projects/ARSpatialMemory-R")
save(data.locomotion.condition.learning, file = "data.locomotion.condition.learning.Rdata")
##################################################
######### Locomotion by Condition (Recall) #######################
setwd("~/R Projects/ARSpatialMemory-R/Data/positionData")
WDFiles = list.files(pattern="*Raw.csv")
for(pNum in 1:length(WDFiles)){
mydata <- read.csv(WDFiles[pNum])
mydata <- subset(mydata, TrialID != "Training")
mydataRecall <- subset(mydata, TrialState == "recall")
mydataRecall <- dplyr::select(mydataRecall, TrialID, CameraEulerAngles.y, CameraPosition.x, CameraPosition.y, CameraPosition.z)
for(row in 1:nrow(mydataRecall)){
if(mydataRecall[row,2]>180){
mydataRecall[row,2] <- mydataRecall[row,2]-360
}
}
Furniture_RegularRotation = vector()
NoFurniture_RegularRotation = vector()
Furniture_IrregularRotation = vector()
NoFurniture_IrregularRotation = vector()
Furniture_RegularDistance = vector()
NoFurniture_RegularDistance  = vector()
Furniture_IrregularDistance  = vector()
NoFurniture_IrregularDistance = vector()
for(i in 1:20){
if((pNum == 2 && i == 12) ||
(pNum == 2 && i == 16) ||
(pNum == 5 && i == 19) ||
(pNum == 6 && i == 14) ||
(pNum == 6 && i == 15) ||
(pNum == 7 && i == 12) ||
(pNum == 9 && i == 6) ||
(pNum == 9 && i == 9) ||
(pNum == 9 && i == 10) ||
(pNum == 11 && i == 1) ||
(pNum == 12 && i == 12) ||
(pNum == 12 && i == 17) ||
(pNum == 13 && i == 1) ||
(pNum == 14 && i == 1) ||
(pNum == 14 && i == 17) ||
(pNum == 15 && i == 5) ||
(pNum == 15 && i == 6) ||
(pNum == 15 && i == 7) ||
(pNum == 15 && i == 9)){
}else{
df <- subset(mydataRecall, TrialID==i)
ar = vector()
ad = vector()
for(row in 1:nrow(df)-1){
r <- abs(df[row+1,2] - df[row,2])
ar <- append(ar,r)
d <- sqrt((df[row+1,3] - df[row,3])*(df[row+1,3] - df[row,3]) + (df[row+1,5] - df[row,5])*(df[row+1,5] - df[row,5]))
ad <- append(ad,d)
}
if(pNum %% 4 == 1){
if(i >= 1 && i <= 5){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 6 && i <= 10){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 11 && i <= 15){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}else if(pNum %% 4 == 2){
if(i >= 11 && i <= 15){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 1 && i <= 5){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 16 && i <= 20){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}
else if(pNum %% 4 == 3){
if(i >= 6 && i <= 10){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 16 && i <= 20){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 1 && i <= 5){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}
else if(pNum %% 4 == 0){
if(i >= 16 && i <= 20){
Furniture_RegularRotation <- append(Furniture_RegularRotation,sum(ar))
Furniture_RegularDistance <- append(Furniture_RegularDistance,sum(ad))
}else if(i >= 11 && i <= 15){
NoFurniture_RegularRotation <- append(NoFurniture_RegularRotation,sum(ar))
NoFurniture_RegularDistance <- append(NoFurniture_RegularDistance,sum(ad))
}else if(i >= 6 && i <= 10){
Furniture_IrregularRotation <- append(Furniture_IrregularRotation,sum(ar))
Furniture_IrregularDistance <- append(Furniture_IrregularDistance,sum(ad))
}else{
NoFurniture_IrregularRotation <- append(NoFurniture_IrregularRotation,sum(ar))
NoFurniture_IrregularDistance <- append(NoFurniture_IrregularDistance,sum(ad))
}
}
}
assign(paste("MeanFurniture_RegularRotation",pNum), mean(Furniture_RegularRotation))
assign(paste("MeanNoFurniture_RegularRotation",pNum), mean(NoFurniture_RegularRotation))
assign(paste("MeanFurniture_IrregularRotation",pNum), mean(Furniture_IrregularRotation))
assign(paste("MeanNoFurniture_IrregularRotation",pNum), mean(NoFurniture_IrregularRotation))
assign(paste("MeanFurniture_RegularDistance",pNum), mean(Furniture_RegularDistance))
assign(paste("MeanNoFurniture_RegularDistance",pNum), mean(NoFurniture_RegularDistance))
assign(paste("MeanFurniture_IrregularDistance",pNum), mean(Furniture_IrregularDistance))
assign(paste("MeanNoFurniture_IrregularDistance",pNum), mean(NoFurniture_IrregularDistance))
}
}
data.locomotion.condition.recall <- data.frame(
PID = 1:16,
Condition = rep(c("Furniture-Regular", "NoFurniture-Regular", "Furniture-Irregular", "NoFurniture-Irregular"), each = 16),
Rotation = c(get('MeanFurniture_RegularRotation 1'),  get('MeanFurniture_RegularRotation 2'), get('MeanFurniture_RegularRotation 3'), get('MeanFurniture_RegularRotation 4'),
get('MeanFurniture_RegularRotation 5'), get('MeanFurniture_RegularRotation 6'), get('MeanFurniture_RegularRotation 7'), get('MeanFurniture_RegularRotation 8'),
get('MeanFurniture_RegularRotation 9'), get('MeanFurniture_RegularRotation 10'), get('MeanFurniture_RegularRotation 11'), get('MeanFurniture_RegularRotation 12'),
get('MeanFurniture_RegularRotation 13'), get('MeanFurniture_RegularRotation 14'), get('MeanFurniture_RegularRotation 15'), get('MeanFurniture_RegularRotation 16'),
get('MeanNoFurniture_RegularRotation 1'),  get('MeanNoFurniture_RegularRotation 2'), get('MeanNoFurniture_RegularRotation 3'), get('MeanNoFurniture_RegularRotation 4'),
get('MeanNoFurniture_RegularRotation 5'), get('MeanNoFurniture_RegularRotation 6'), get('MeanNoFurniture_RegularRotation 7'), get('MeanNoFurniture_RegularRotation 8'),
get('MeanNoFurniture_RegularRotation 9'), get('MeanNoFurniture_RegularRotation 10'), get('MeanNoFurniture_RegularRotation 11'), get('MeanNoFurniture_RegularRotation 12'),
get('MeanNoFurniture_RegularRotation 13'), get('MeanNoFurniture_RegularRotation 14'), get('MeanNoFurniture_RegularRotation 15'), get('MeanNoFurniture_RegularRotation 16'),
get('MeanFurniture_IrregularRotation 1'),  get('MeanFurniture_IrregularRotation 2'), get('MeanFurniture_IrregularRotation 3'), get('MeanFurniture_IrregularRotation 4'),
get('MeanFurniture_IrregularRotation 5'), get('MeanFurniture_IrregularRotation 6'), get('MeanFurniture_IrregularRotation 7'), get('MeanFurniture_IrregularRotation 8'),
get('MeanFurniture_IrregularRotation 9'), get('MeanFurniture_IrregularRotation 10'), get('MeanFurniture_IrregularRotation 11'), get('MeanFurniture_IrregularRotation 12'),
get('MeanFurniture_IrregularRotation 13'), get('MeanFurniture_IrregularRotation 14'), get('MeanFurniture_IrregularRotation 15'), get('MeanFurniture_IrregularRotation 16'),
get('MeanNoFurniture_IrregularRotation 1'),  get('MeanNoFurniture_IrregularRotation 2'), get('MeanNoFurniture_IrregularRotation 3'), get('MeanNoFurniture_IrregularRotation 4'),
get('MeanNoFurniture_IrregularRotation 5'), get('MeanNoFurniture_IrregularRotation 6'), get('MeanNoFurniture_IrregularRotation 7'), get('MeanNoFurniture_IrregularRotation 8'),
get('MeanNoFurniture_IrregularRotation 9'), get('MeanNoFurniture_IrregularRotation 10'), get('MeanNoFurniture_IrregularRotation 11'), get('MeanNoFurniture_IrregularRotation 12'),
get('MeanNoFurniture_IrregularRotation 13'), get('MeanNoFurniture_IrregularRotation 14'), get('MeanNoFurniture_IrregularRotation 15'), get('MeanNoFurniture_IrregularRotation 16')),
Distance = c(get('MeanFurniture_RegularDistance 1'),  get('MeanFurniture_RegularDistance 2'), get('MeanFurniture_RegularDistance 3'), get('MeanFurniture_RegularDistance 4'),
get('MeanFurniture_RegularDistance 5'), get('MeanFurniture_RegularDistance 6'), get('MeanFurniture_RegularDistance 7'), get('MeanFurniture_RegularDistance 8'),
get('MeanFurniture_RegularDistance 9'), get('MeanFurniture_RegularDistance 10'), get('MeanFurniture_RegularDistance 11'), get('MeanFurniture_RegularDistance 12'),
get('MeanFurniture_RegularDistance 13'), get('MeanFurniture_RegularDistance 14'), get('MeanFurniture_RegularDistance 15'), get('MeanFurniture_RegularDistance 16'),
get('MeanNoFurniture_RegularDistance 1'),  get('MeanNoFurniture_RegularDistance 2'), get('MeanNoFurniture_RegularDistance 3'), get('MeanNoFurniture_RegularDistance 4'),
get('MeanNoFurniture_RegularDistance 5'), get('MeanNoFurniture_RegularDistance 6'), get('MeanNoFurniture_RegularDistance 7'), get('MeanNoFurniture_RegularDistance 8'),
get('MeanNoFurniture_RegularDistance 9'), get('MeanNoFurniture_RegularDistance 10'), get('MeanNoFurniture_RegularDistance 11'), get('MeanNoFurniture_RegularDistance 12'),
get('MeanNoFurniture_RegularDistance 13'), get('MeanNoFurniture_RegularDistance 14'), get('MeanNoFurniture_RegularDistance 15'), get('MeanNoFurniture_RegularDistance 16'),
get('MeanFurniture_IrregularDistance 1'),  get('MeanFurniture_IrregularDistance 2'), get('MeanFurniture_IrregularDistance 3'), get('MeanFurniture_IrregularDistance 4'),
get('MeanFurniture_IrregularDistance 5'), get('MeanFurniture_IrregularDistance 6'), get('MeanFurniture_IrregularDistance 7'), get('MeanFurniture_IrregularDistance 8'),
get('MeanFurniture_IrregularDistance 9'), get('MeanFurniture_IrregularDistance 10'), get('MeanFurniture_IrregularDistance 11'), get('MeanFurniture_IrregularDistance 12'),
get('MeanFurniture_IrregularDistance 13'), get('MeanFurniture_IrregularDistance 14'), get('MeanFurniture_IrregularDistance 15'), get('MeanFurniture_IrregularDistance 16'),
get('MeanNoFurniture_IrregularDistance 1'),  get('MeanNoFurniture_IrregularDistance 2'), get('MeanNoFurniture_IrregularDistance 3'), get('MeanNoFurniture_IrregularDistance 4'),
get('MeanNoFurniture_IrregularDistance 5'), get('MeanNoFurniture_IrregularDistance 6'), get('MeanNoFurniture_IrregularDistance 7'), get('MeanNoFurniture_IrregularDistance 8'),
get('MeanNoFurniture_IrregularDistance 9'), get('MeanNoFurniture_IrregularDistance 10'), get('MeanNoFurniture_IrregularDistance 11'), get('MeanNoFurniture_IrregularDistance 12'),
get('MeanNoFurniture_IrregularDistance 13'), get('MeanNoFurniture_IrregularDistance 14'), get('MeanNoFurniture_IrregularDistance 15'), get('MeanNoFurniture_IrregularDistance 16'))
)
data.locomotion.condition.recall$PID=as.factor(data.locomotion.condition.recall$PID)
data.locomotion.condition.recall$Condition=as.factor(data.locomotion.condition.recall$Condition)
setwd("~/R Projects/ARSpatialMemory-R")
save(data.locomotion.condition.recall, file = "data.locomotion.condition.recall.Rdata")
library(dplyr)
library(ggpubr)
library(rstatix)
library(dplyr)
library(ggpubr)
library(rstatix)
load("data.locomotion.furniture.learning.Rdata")
summary(data.locomotion.furniture.learning)
load("data.locomotion.furniture.recall.Rdata")
summary(data.locomotion.furniture.recall)
load("data.locomotion.layout.Rdata")
summary(data.locomotion.layout)
load("data.locomotion.condition.learning.Rdata")
summary(data.locomotion.condition.learning)
load("data.locomotion.condition.recall.Rdata")
summary(data.locomotion.condition.recall)
View(data.locomotion.furniture.learning)
boxplot(data.locomotion.furniture.learning$Rotation)
boxplot(data.locomotion.furniture.learning$Distance)
Q <- quantile(data.locomotion.furniture.learning$Distance, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.locomotion.furniture.learning$Distance)
up <-  Q[2]+1.5*iqr # Upper Range
data.locomotion.furniture.learning.eliminated <- subset(data.locomotion.furniture.learning, data.locomotion.furniture.learning$Distance < up)
summary(data.locomotion.furniture.learning.eliminated)
boxplot(data.locomotion.furniture.recall$Rotation)
boxplot(data.locomotion.furniture.recall$Distance)
boxplot(data.locomotion.furniture.recall$Rotation)
boxplot(data.locomotion.furniture.recall$Distance)
Q <- quantile(data.locomotion.furniture.recall$Distance, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.locomotion.furniture.recall$Distance)
up <-  Q[2]+1.5*iqr # Upper Range
data.locomotion.furniture.recall.eliminated <- subset(data.locomotion.furniture.recall, data.locomotion.furniture.recall$Distance < up)
summary(data.locomotion.furniture.recall.eliminated)
boxplot(data.locomotion.furniture.recall.eliminated$Rotation)
boxplot(data.locomotion.furniture.recall.eliminated$Distance)
shapiro.test(data.locomotion.furniture.learning.eliminated$Rotation)
shapiro.test(data.locomotion.furniture.learning.eliminated$Distance)
shapiro.test(data.locomotion.furniture.recall.eliminated$Rotation)
shapiro.test(data.locomotion.furniture.recall.eliminated$Distance)
t.Furniture.learning.Rotation <- t.test(data.locomotion.furniture.learning.eliminated[data.locomotion.furniture.learning.eliminated["Furniture"]=="Furniture",3], data.locomotion.furniture.learning.eliminated[data.locomotion.furniture.learning.eliminated['Furniture']=="NoFurniture",3])
t.Furniture.Rotation
t.Furniture.learning.Rotation <- t.test(data.locomotion.furniture.learning.eliminated[data.locomotion.furniture.learning.eliminated["Furniture"]=="Furniture",3], data.locomotion.furniture.learning.eliminated[data.locomotion.furniture.learning.eliminated['Furniture']=="NoFurniture",3])
t.Furniture.learning.Rotation
t.Furniture.learning.Distance <- t.test(data.locomotion.furniture.learning.eliminated[data.locomotion.furniture.learning.eliminated["Furniture"]=="Furniture",4], data.locomotion.furniture.learning.eliminated[data.locomotion.furniture.learning.eliminated['Furniture']=="NoFurniture",4])
t.Furniture.learning.Distance
t.Furniture.recall.Rotation <- t.test(data.locomotion.furniture.recall.eliminated[data.locomotion.furniture.recall.eliminated["Furniture"]=="Furniture",3], data.locomotion.furniture.recall.eliminated[data.locomotion.furniture.recall.eliminated['Furniture']=="NoFurniture",3])
t.Furniture.recall.Rotation
t.Furniture.recall.Distance <- t.test(data.locomotion.furniture.recall.eliminated[data.locomotion.furniture.recall.eliminated["Furniture"]=="Furniture",4], data.locomotion.furniture.recall.eliminated[data.locomotion.furniture.recall.eliminated['Furniture']=="NoFurniture",4])
t.Furniture.recall.Distance
d <- Rmisc::summarySE(data.locomotion.furniture.learning.eliminated, measurevar = "Rotation", groupvars = c("Furniture"))
ggplot(d, aes(x = Furniture, y = Rotation, fill = Furniture)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Rotation-ci, ymax=Rotation+ci)) + scale_fill_manual(values=c("#66c2a5", "#fc8d62"))
d2 <- Rmisc::summarySE(data.locomotion.furniture.learning.eliminated, measurevar = "Distance", groupvars = c("Furniture"))
ggplot(d2, aes(x = Furniture, y = Distance, fill = Furniture)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Distance-ci, ymax=Distance+ci)) + scale_fill_manual(values=c("#66c2a5", "#fc8d62"))
d3 <- Rmisc::summarySE(data.locomotion.furniture.recall.eliminated, measurevar = "Rotation", groupvars = c("Furniture"))
ggplot(d, aes(x = Furniture, y = Rotation, fill = Furniture)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Rotation-ci, ymax=Rotation+ci)) + scale_fill_manual(values=c("#66c2a5", "#fc8d62"))
d4 <- Rmisc::summarySE(data.locomotion.furniture.recall.eliminated, measurevar = "Distance", groupvars = c("Furniture"))
ggplot(d2, aes(x = Furniture, y = Distance, fill = Furniture)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Distance-ci, ymax=Distance+ci)) + scale_fill_manual(values=c("#66c2a5", "#fc8d62"))
boxplot(data.locomotion.condition.learning$Rotation)
boxplot(data.locomotion.condition.learning$Distance)
boxplot(data.locomotion.condition.learning$Rotation)
boxplot(data.locomotion.condition.learning$Distance)
Q <- quantile(data.locomotion.condition.learning$Rotation, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.locomotion.condition.learning$Rotation)
up <-  Q[2]+1.5*iqr # Upper Range
data.locomotion.condition.learning.eliminated <- subset(data.locomotion.condition.learning, data.locomotion.condition.learning$Rotation < up)
Q2 <- quantile(data.locomotion.condition.learning.eliminated$Distance, probs=c(.25, .75), na.rm = FALSE)
iqr2 <- IQR(data.locomotion.condition.learning.eliminated$Distance)
up2 <-  Q2[2]+1.5*iqr2 # Upper Range
data.locomotion.condition.learning.eliminated <- subset(data.locomotion.condition.learning.eliminated, data.locomotion.condition.learning.eliminated$Distance < up2)
boxplot(data.locomotion.condition.learning.eliminated$Rotation)
boxplot(data.locomotion.condition.learning.eliminated$Distance)
boxplot(data.locomotion.condition.recall$Rotation)
boxplot(data.locomotion.condition.recall$Distance)
boxplot(data.locomotion.condition.learning$Rotation)
boxplot(data.locomotion.condition.learning$Distance)
Q <- quantile(data.locomotion.condition.learning$Rotation, probs=c(.25, .75), na.rm = FALSE)
iqr <- IQR(data.locomotion.condition.learning$Rotation)
up <-  Q[2]+1.5*iqr # Upper Range
data.locomotion.condition.learning.eliminated <- subset(data.locomotion.condition.learning, data.locomotion.condition.learning$Rotation < up)
Q2 <- quantile(data.locomotion.condition.learning.eliminated$Distance, probs=c(.25, .75), na.rm = FALSE)
iqr2 <- IQR(data.locomotion.condition.learning.eliminated$Distance)
up2 <-  Q2[2]+1.5*iqr2 # Upper Range
data.locomotion.condition.learning.eliminated <- subset(data.locomotion.condition.learning.eliminated, data.locomotion.condition.learning.eliminated$Distance < up2)
boxplot(data.locomotion.condition.recall$Rotation)
boxplot(data.locomotion.condition.recall$Distance)
Q3 <- quantile(data.locomotion.condition.recall$Rotation, probs=c(.25, .75), na.rm = FALSE)
iqr3 <- IQR(data.locomotion.condition.recall$Rotation)
up3 <-  Q3[2]+1.5*iqr3 # Upper Range
data.locomotion.condition.recall.eliminated <- subset(data.locomotion.condition.recall, data.locomotion.condition.recall$Rotation < up3)
Q4 <- quantile(data.locomotion.condition.recall.eliminated$Distance, probs=c(.25, .75), na.rm = FALSE)
iqr4 <- IQR(data.locomotion.condition.recall.eliminated$Distance)
up4 <-  Q4[2]+1.5*iqr4 # Upper Range
data.locomotion.condition.recall.eliminated <- subset(data.locomotion.condition.recall.eliminated, data.locomotion.condition.recall.eliminated$Distance < up4)
shapiro.test(data.locomotion.condition.learning.eliminated$Rotation)
shapiro.test(data.locomotion.condition.learning.eliminated$Distance)
shapiro.test(data.locomotion.condition.recall.eliminated$Rotation)
shapiro.test(data.locomotion.condition.recall.eliminated$Distance)
art.locomotion.learning.Rotation <- art(Rotation ~ Condition + Error(PID), data = data.locomotion.condition.learning.eliminated)
library(ARTool)
art.locomotion.learning.Rotation <- art(Rotation ~ Condition + Error(PID), data = data.locomotion.condition.learning.eliminated)
art.locomotion.learning.Distance <- art(Distance ~ Condition + Error(PID), data = data.locomotion.condition.learning.eliminated)
art.locomotion.recall.Distance <- art(Distance ~ Condition + Error(PID), data = data.locomotion.condition.recall.eliminated)
model.locomotion.learning.Rotation <- anova(art.locomotion.learning.Rotation)
model.locomotion.learning.Rotation$part.eta.sq = with(model.locomotion.learning.Rotation, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Rotation
model.locomotion.learning.Distance <- anova(art.locomotion.learning.Distance)
model.locomotion.learning.Distance$part.eta.sq = with(model.locomotion.laerning.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Distance <- anova(art.locomotion.learning.Distance)
model.locomotion.learning.Distance$part.eta.sq = with(model.locomotion.laerning.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Distance <- anova(art.locomotion.learning.Distance)
model.locomotion.learning.Distance$part.eta.sq = with(model.locomotion.learning.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Distance
model.locomotion.learning.Rotation <- anova(art.locomotion.learning.Rotation)
model.locomotion.learning.Rotation$part.eta.sq = with(model.locomotion.learning.Rotation, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Rotation
model.locomotion.learning.Distance <- anova(art.locomotion.learning.Distance)
model.locomotion.learning.Distance$part.eta.sq = with(model.locomotion.learning.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Distance
model.locomotion.recall.Distance <- anova(art.locomotion.recall.Distance)
model.locomotion.recall.Distance$part.eta.sq = with(model.locomotion.recall.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.recall.Distance
model.locomotion.learning.Rotation <- anova(art.locomotion.learning.Rotation)
model.locomotion.learning.Rotation$part.eta.sq = with(model.locomotion.learning.Rotation, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Rotation
model.locomotion.learning.Distance <- anova(art.locomotion.learning.Distance)
model.locomotion.learning.Distance$part.eta.sq = with(model.locomotion.learning.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.learning.Distance
model.locomotion.recall.Distance <- anova(art.locomotion.recall.Distance)
model.locomotion.recall.Distance$part.eta.sq = with(model.locomotion.recall.Distance, `Sum Sq`/(`Sum Sq` + `Sum Sq.res`))
model.locomotion.recall.Distance
model.recall.rotation <- aov(Rotation ~ Condition + Error(PID), data = data.locomotion.condition.recall.eliminated)
summary(model.recall.rotation)
pairwise.wilcox.test(data.locomotion.condition.recall.eliminated$Rotation, data.locomotion.condition.recall.eliminated$Condition, p.adj="bonferroni", exact=F, paired=T)
d <- Rmisc::summarySE(data.locomotion.condition.learning.eliminated, measurevar = "Rotation", groupvars = c("Condition"))
ggplot(d, aes(x = Condition, y = Rotation, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Rotation-ci, ymax=Rotation+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
d2 <- Rmisc::summarySE(data.locomotion.condition.learning.eliminated, measurevar = "Distance", groupvars = c("Condition"))
ggplot(d2, aes(x = Condition, y = Distance, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Distance-ci, ymax=Distance+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
d3 <- Rmisc::summarySE(data.locomotion.condition.recall.eliminated, measurevar = "Rotation", groupvars = c("Condition"))
ggplot(d3, aes(x = Condition, y = Distance, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Rotation-ci, ymax=Rotation+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
d <- Rmisc::summarySE(data.locomotion.condition.learning.eliminated, measurevar = "Rotation", groupvars = c("Condition"))
ggplot(d, aes(x = Condition, y = Rotation, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Rotation-ci, ymax=Rotation+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
d2 <- Rmisc::summarySE(data.locomotion.condition.learning.eliminated, measurevar = "Distance", groupvars = c("Condition"))
ggplot(d2, aes(x = Condition, y = Distance, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Distance-ci, ymax=Distance+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
d3 <- Rmisc::summarySE(data.locomotion.condition.recall.eliminated, measurevar = "Rotation", groupvars = c("Condition"))
ggplot(d3, aes(x = Condition, y = Rotation, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Rotation-ci, ymax=Rotation+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
d4 <- Rmisc::summarySE(data.locomotion.condition.recall.eliminated, measurevar = "Distance", groupvars = c("Condition"))
ggplot(d4, aes(x = Condition, y = Distance, fill = Condition)) + geom_bar(stat = "identity") + geom_errorbar(aes(ymin=Distance-ci, ymax=Distance+ci)) + scale_fill_manual(values=c("#e41a1c", "#377eb8", "#984ea3", "#ff7f00"))
